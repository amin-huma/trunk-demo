name: Backport release PR to release-1.0

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  backport:
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create backport branch off release-1.0
        env:
          PRNUM: ${{ github.event.pull_request.number }}
        run: |
          git fetch origin release-1.0
          BP="backport/pr-${PRNUM}-to-release-1.0"
          git checkout -B "$BP" origin/release-1.0
          echo "BP=$BP" >> "$GITHUB_ENV"

      - name: Get commits from PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits \
            --paginate --jq '.[].sha' > /tmp/commits.txt
          test -s /tmp/commits.txt || { echo "::error::No commits found"; exit 1; }

      - name: Cherry-pick
        run: |
          while read SHA; do
            git cherry-pick -x -X theirs "$SHA" || { git cherry-pick --abort; exit 1; }
          done < /tmp/commits.txt

      - name: Push backport branch
        run: git push --set-upstream origin "$BP"

      - name: Open PR to release-1.0
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TITLE="Backport PR #${{ github.event.pull_request.number }} to release-1.0"
          BODY="Automated backport of #${{ github.event.pull_request.number }} to \`release-1.0\`."
          gh pr create --title "$TITLE" --body "$BODY" --base release-1.0 --head "$BP" --label backport
