name: Backport release PR to release-1.0

on:
  pull_request:
    types: [closed]
    branches: [main]

jobs:
  backport:
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Ensure target branch exists
        run: |
          git ls-remote --exit-code --heads origin release-1.0 >/dev/null || {
            echo "::error::Target branch 'release-1.0' not found"; exit 1; }

      - name: Create backport branch off release-1.0
        env:
          PRNUM: ${{ github.event.pull_request.number }}
        run: |
          git fetch origin release-1.0
          BP="backport/pr-${PRNUM}-to-release-1.0"
          git checkout -B "$BP" origin/release-1.0
          echo "BP=$BP" >> "$GITHUB_ENV"

      - name: Cherry-pick the merge commit
        run: |
          MERGE_SHA="${{ github.event.pull_request.merge_commit_sha }}"
          git fetch origin main --prune
          # Robust parent count
          PARENTS=$(git rev-list --parents -n 1 "$MERGE_SHA" | awk '{print NF-1}')
          if [ "$PARENTS" -gt 1 ]; then
          git cherry-pick -x -m 1 "$MERGE_SHA" || { git cherry-pick --abort; exit 1; }
          else
          git cherry-pick -x "$MERGE_SHA" || { git cherry-pick --abort; exit 1; }
          fi

      - name: Push backport branch
        run: git push --set-upstream origin "$BP"

      - name: Open PR to release-1.0
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TITLE="Backport PR #${{ github.event.pull_request.number }} to release-1.0"
          BODY="Automated backport of #${{ github.event.pull_request.number }} to \`release-1.0\`."
          gh pr create --title "$TITLE" --body "$BODY" --base release-1.0 --head "$BP" --label backport
